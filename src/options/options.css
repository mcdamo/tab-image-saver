#container {
	width: 100vw;
	height: 100vh;
	display: grid;
	grid-column-gap: 1rem;
	grid-template-columns: min-content auto;
	overflow: hidden;
}

#errorFill {
	z-index: 99;
	position: absolute;
	width: 100%;
	height: 100%;
	background: rgba(0,0,0,.6);
}

#errorPopup {
	position: absolute;
	top: 40%;
	left: 50%;
	width: 50%;
	padding: 1rem;
	border: 1px solid black;
	background: lightcoral;
	text-align: center;
	-webkit-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
}

#sidebar {
	/*overflow-y: auto;*/
	padding: 1rem;
	min-width: 200px;
	border-right: 1px solid var(--color-border);
	display: flex;
	flex-direction: column;
}

#content {
	overflow-y: auto;
	padding-left: 1rem;
	padding-right: 1rem;
}

#header {
	font-size:1.2em;
	padding-left: 30px;
	background: url("/img/icons/tab-image-saver-v2@24.png") no-repeat;
}

.header2 {
	position: sticky;
	top: 0;
	background-color: var(--color-bg);
	padding-top: 0.5rem;
	border-bottom: 1px solid var(--color-border);
	z-index: 1;
}

.header2 > * {
	display: inline-block;
}

#rulesetContainer {
	padding: 0.5rem;
	max-width: 1500px;
}

.optionGroup {
	margin-top: 0.5rem;
}

.optionGroup > fieldset {
	clear: both;
	border-radius: 0 0 0.3rem 0.3rem;
	border: 1px solid var(--color-border);
	margin: 0;
	padding: 0.5rem;
}

fieldset label {
	display: block;
}

legend {
	font-size: 1rem;
	color: var(--color-title-fg);
	background-color: var(--color-title-bg);
}

.optionGroup > legend {
	font-size: 1rem;
	border-radius: 0.3rem 0.3rem 0 0;
	padding: 0.2rem 0;
	width: 100%;
	color: var(--color-title-fg);
	background-color: var(--color-title-bg);
	white-space: nowrap;
}

.optionGroup > legend a {
	color: var(--color-title-fg);
}

.optionGroup > legend span {
	padding: 0 1rem;
}

label.text {
	font-weight: bolder;
}

label > input[type=text] {
	display: block;
	margin-bottom: 0;
	padding-bottom: 0;
}

label.setInherit {
	float: right;
	font-style: oblique;
	margin-right: 1rem;
}

@media screen and (max-width: 1000px) {
	.row {
		flex-direction: column;
	}

	.column {
		max-width: 100vw;
	}
}

/*
@media screen and (min-width: 1600px) {
	.column {
		flex-direction: row;
	}

	.column > * {
		flex-grow: 1;
		margin-right: 1rem;
	}
}
*/

.inherited {
	opacity: 0.5;
}

.inherited > legend {
	opacity: 1.0;
}

.inputRow {
	clear: both;
}

.inputRow {
	margin-bottom: 0.5rem;
}

.note {
	font-style: oblique;
}

h2 .button {
	font-size: 1rem;
}

.inputWrap {
	display: grid;
	grid-column-gap: 0.5rem;
	align-items: self-end;
	grid-template-columns: auto;
}

.rulesToolbar {
	margin-bottom: 1rem;
	display: grid;
	grid-template-columns: auto max-content max-content;
	grid-column-gap: 0.5rem;
}

.rulesInterface .inputWrap {
	grid-template-columns: 2rem auto 3rem;
}

#rulesetSelect .inputWrap {
	grid-template-columns: 2rem auto;
}

#rulesetSelect .icon {
	padding-left: 0rem;
}

.rulesTestInterface .inputWrap {
	grid-template-columns: auto 4rem;
}

#shortcuts .inputWrap {
	align-items: self-end;
	grid-template-columns: min-content min-content;
}

#shortcuts input {
	width: 8rem;
}

fieldset .wrap {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}

fieldset .wrap > * {
	margin-right: 1rem;
}

#rulesetSelect {
	margin-top: 1rem;
	flex-grow: 2;
	overflow-y: auto;
}

#rulesetSelect .button {
	width: auto;
	padding: 0.5rem;
	/*min-height: 2.5rem;*/
}

#rulesetSelect .button.selected {
	background-color: var(--color-button-selected);
	color: var(--color-button-selected-fg);
}

#rulesetSelect .button.selected .error-icon {
	filter: invert(); /* make svg white */
	color: var(--color-button-fg);
}

#sidebar #backup {
	display: flex;
	flex-direction: row;
	justify-content: center;
	flex-wrap: wrap;
}

#sidebar #backup > * {
	margin: 1px;
}

.button.delete {
	background-color:var(--color-delete);
	padding: 0.5rem;
}

.icon-button { 
	width: 1rem;
	height: 1.2rem;
}

.button.delete:hover {
	background-color:var(--color-delete-hover);
}

.delete-icon {
	filter: invert(); /* make svg white */
	background-size: contain;
	height: 100%;
	padding-left: 2rem;
	background-position: left;
	background-repeat: no-repeat;
	background-image: url(/img/trash-alt-solid.svg);
}

.drag-icon {
	display: inline-block;
	filter: invert() brightness(0.5) sepia(1) hue-rotate(180deg) saturate(16); /* make svg blue */
	background-image: url(/img/grip-lines-solid.svg);
	background-size: contain;
	height: 100%;
	background-position: left;
	background-repeat: no-repeat;
}

.inherited .drag-icon {
	filter: invert() brightness(0.5);
}

.add-icon {
	background-image: url('/img/plus-solid.svg');
}

.export-icon {
	background-image: url('/img/download-solid.svg');
}

.import-icon {
	background-image: url('/img/upload-solid.svg');
}

.defaults-icon {
	background-image: url('/img/history-solid.svg');
}

.update-icon {
	background-image: url('/img/tools-solid.svg');
}

.button.button-important {
	background-color: lightcoral;
}

.button.button-disabled {
	background-color:var(--color-disable);
	cursor: default;
	font-style: italic;
}

.button.button-disabled:hover {
	filter: none;
}
/*
#rulesetSelect .drag-icon {
	width: 1rem;
	height: 1rem;
}
*/
#rulesetDelete {
	margin-bottom: 0.5rem;
}

#rulesetSelectRulesets {
	border-top: 1px dotted black;
	border-bottom: 1px dotted black;
	padding-top: 0.5rem;
	margin-bottom: 0.5rem;
}

.handle {
	cursor: move;
	width: 1.5rem;
}

.inherited > * {
	cursor: default;
	pointer-events: none; /* disable clicks */
}

.inherited .button {
	background-color:var(--color-disable);
}

.inherited .button:hover {
	filter: brightness();
}

.rulesTestResult .success {
	font-weight: bold;
}

.right {
	float: right;
}

.icon {
	padding-left: 2rem;
	background-position: left;
	background-repeat: no-repeat;
}
.error-icon {
	filter: invert() brightness(0.5) sepia(1) hue-rotate(310deg) saturate(16);
}
